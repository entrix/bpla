<?xml version="1.0" encoding="UTF-8"?>
<!--
	Application context definition for PetClinic on Hibernate.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <!-- import the dataSource definition -->
    <import resource="applicationContext-dataSource.xml"/>

	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- (in this case, Hibernate-related settings for the sessionFactory definition below) -->
	<context:property-placeholder location="classpath:jdbc.properties"/>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
			p:dataSource-ref="dataSource">
        <!--<property name="hibernateProperties" value="classpath:hibernate.cfg.xml" />-->
        <property name="annotatedClasses">
            <list>
                <value>org.hibernate.bpla.domain.Bpla</value>
                <value>org.hibernate.bpla.domain.Detail</value>
                <!--<value>org.hibernate.bpla.domain.CrossDetail</value>-->
                <value>org.hibernate.bpla.domain.DetType</value>
                <value>org.hibernate.bpla.domain.WareHouse</value>
            </list>
        </property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
                <prop key="show_sql">true</prop>
                <!--<prop key="hibernate.connection.characterEncoding">utf8</prop>-->
            </props>
		</property>
        <!--<property name="configurationClass">-->
            <!--<value>org.hibernate.cfg.AnnotationConfiguration</value>-->
        <!--</property>-->
        <!--<property name="configLocation">-->
            <!--<value>classpath:hibernate.cfg.xml</value>-->
        <!--</property>-->
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
				</entry>
			</map>
		</property>
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
			p:sessionFactory-ref="sessionFactory"/>

	<!-- Transaction manager that delegates to JTA (for a transactional JNDI DataSource) -->
	<!--
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/>
	-->


	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!--
		Activates various annotations to be detected in bean classes:
		Spring's @Required and @Autowired, as well as JSR 250's @Resource.
	-->
	<context:annotation-config/>

	<!--
		Instruct Spring to perform declarative transaction management
		automatically on annotated classes.
	-->
	<tx:annotation-driven/>

	<!--
		Exporter that exposes the Hibernate statistics service via JMX. Autodetects the
		service MBean, using its bean name as JMX object name.
	-->
	<context:mbean-export/>

    <!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
For example @Controller and @Service. Make sure to set the correct base-package-->
    <!--<context:component-scan base-package="org.hibernate.bpla.web" />-->

	<!-- Bpla's central data access object: Hibernate implementation -->
    <bean id="service" class="org.hibernate.bpla.persistence.HibernateService"/>

	<!-- Hibernate's JMX statistics service -->
	<bean name="bpla:type=HibernateStatistics" class="org.hibernate.jmx.StatisticsService" autowire="byName"/>

</beans>